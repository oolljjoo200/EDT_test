
Функция ПолучитьДанныеКонтрагентаИзEГРЮЛ(ИНН) Экспорт
	
	Результат = Неопределено;
	
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	Соединение = Новый HTTPСоединение("egrul.itsoft.ru",,,,,30,ЗащищенноеСоединение);
	
	АдресРесурса = СтрШаблон("/short_data/?%1", ИНН);
	Запрос = Новый HTTPЗапрос(АдресРесурса);
	
	Попытка
		Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос); 
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось отправить запрос, причина: " + ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Результат;
	КонецПопытки;
	
	СоответствиеПолей = Новый Соответствие;
	СоответствиеПолей.Вставить("reg_date",	 "ДатаРегистрации");
	СоответствиеПолей.Вставить("ogrn",		 "ОГРН");
	СоответствиеПолей.Вставить("inn",		 "ИНН");
	СоответствиеПолей.Вставить("kpp",		 "КПП");
	СоответствиеПолей.Вставить("short_name", "Наименование");
	СоответствиеПолей.Вставить("full_name",	 "НаименованиеПолное");
	СоответствиеПолей.Вставить("address",	 "ЮридическийАдрес");
	СоответствиеПолей.Вставить("chief_position", "ДолжностьДиректора");
	СоответствиеПолей.Вставить("chief_shortname", "Директор");
	
	Если Ответ.КодСостояния = 200 Тогда
		
		Результат = Новый Структура;
		
		ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
		ДанныеСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
		
		Для каждого ЭлементДанных Из ДанныеСоответствие Цикл
			ИмяПоляВСтруктуре = СоответствиеПолей.Получить(ЭлементДанных.Ключ);
			Если ЗначениеЗаполнено(ИмяПоляВСтруктуре) Тогда
				Результат.Вставить(ИмяПоляВСтруктуре, ЭлементДанных.Значение);	
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Не удалось выполнить запрос, код состояния: %1, ответ сервера: %2",
										Ответ.КодСостояния, Ответ.ПолучитьТелоКакСтроку());
		Сообщение.Сообщить();
	КонецЕсли;   
	
	Возврат Результат;

КонецФункции // ()

Функция ПолучитьКороткуюСсылку(ДлиннаяСсылка) Экспорт
	
	Результат = Новый Структура("КороткаяСсылка, QR");
	
	Токен = "2bc1a0c79f98e3686cd07bd4190cdd91f4291e18";
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	Соединение = Новый HTTPСоединение("api-ssl.bitly.com",,,,,30, ЗащищенноеСоединение);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", "Bearer " + Токен); 
	Заголовки.Вставить("Content-Type", "application/json");
	
	// формирование тела HTTP-запроса
	ДанныеСтруктура = Новый Структура("long_url", ДлиннаяСсылка);
	ЗаписьJSON = Новый ЗаписьJSON;       
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеСтруктура); 
	
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	Запрос = Новый HTTPЗапрос("/v4/shorten", Заголовки);  
	Запрос.УстановитьТелоИзСтроки(СтрокаJSON);
	
	Попытка
		Ответ = Соединение.ВызватьHTTPМетод("POST", Запрос);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось отправить запрос, причина: " + ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Результат;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 200 Тогда
		
		ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
		
		ДанныеСсылки = ПрочитатьJSON(ЧтениеJSON, Истина);
		
		Результат.КороткаяСсылка = ДанныеСсылки["link"];
		ИдентификаторСсылки = ДанныеСсылки["id"];
		
		// Получение QR-кода
		//https://api-ssl.bitly.com/v4/bitlinks/bit.ly/3IQDYwl/qr
		АдресРесурсаQR = СтрШаблон("/v4/bitlinks/%1/qr", ИдентификаторСсылки);
		Запрос = Новый HTTPЗапрос(АдресРесурсаQR, Заголовки);
		
		Ответ_QR = Соединение.ВызватьHTTPМетод("GET", Запрос);
		Если Ответ_QR.КодСостояния = 200 Тогда
			
			ТелоОтвета = Ответ_QR.ПолучитьТелоКакСтроку();
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
			
			ДанныеQR = ПрочитатьJSON(ЧтениеJSON, Истина);
			
			СтрокаBase64QR = ДанныеQR["qr_code"];    
			
			ПозицияЗапятой = СтрНайти(СтрокаBase64QR, ",");
			
			СтрокаBase64QR = Сред(СтрокаBase64QR, ПозицияЗапятой + 1);
			
			Результат.QR = Base64Значение(СтрокаBase64QR);
									
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Не удалось получить QR-код, код состояния: %1, ответ сервера: %2",
										Ответ_QR.КодСостояния, Ответ_QR.ПолучитьТелоКакСтроку());
			Сообщение.Сообщить();
			
		КонецЕсли;
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Не удалось выполнить запрос, код состояния: %1, ответ сервера: %2",
									Ответ.КодСостояния, Ответ.ПолучитьТелоКакСтроку());
		Сообщение.Сообщить();
	
	КонецЕсли;    
	
	Возврат Результат;

КонецФункции // ()

Функция ОтправитьСообщениеВTelegram(ИдЧата, ТекстСообщения) Экспорт
	
	Результат = Ложь;
	
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	Соединение = Новый HTTPСоединение("api.telegram.org",,,,,30, ЗащищенноеСоединение); 
	
	Токен = "6097479365:AAGZazbGkEF4DVXYuQLiEsTzWUuUUq9JpfU";
	//ИДЧата = "144474639";                                            
	
	АдресРесурса = СтрШаблон("/bot%1/sendMessage?chat_id=%2&text=%3",Токен, ИДЧата, ТекстСообщения);
	Запрос = Новый HTTPЗапрос(АдресРесурса);
	
	Попытка
		Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос);
	Исключение
		Возврат Результат;
	КонецПопытки;
	
	Если Ответ.КодСостояния = 200 Тогда
		Результат = Истина;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Не удалось отправить сообщение, код состояния: %1, ответ сервера: %2",
									Ответ.КодСостояния, Ответ.ПолучитьТелоКакСтроку());
		Сообщение.Сообщить();
	КонецЕсли;    
	
	Возврат Результат;

КонецФункции // ()


